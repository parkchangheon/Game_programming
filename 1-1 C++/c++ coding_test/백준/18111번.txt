//18111번

#include<iostream>
#include<cmath>
using namespace std;





int main() {
	int n, m, b;
	double sum = 0;
	double average = 0;
	int time = 0;
	cin >> n >> m >> b;
	int tmp_b = b;
	int na = n * m;

	int** arr = new int*[n];
	for (int i = 0; i < n; i++) {
		arr[i] = new int[m];
	}

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			cin >> arr[i][j];
			sum += arr[i][j];
		}
	}

	average = round(sum / na);
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			tmp_b += (arr[i][j] - average);
		}
	}

	//블록이 부족하다
	if (tmp_b < 0) {
		while (tmp_b < 0) {
			tmp_b = b;
			average -= 1;

			for (int i = 0; i < n; i++) {
				for (int j = 0; j < m; j++) {
					tmp_b += (arr[i][j] - average);
				}
			}
		}

		int tmp = 0;
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				tmp = arr[i][j] - average;

				if (tmp < 0)
					time += (-tmp);
				else {
					time += (tmp * 2);
				}

			}
		}

	}

	//블록이 충분하다
	else {
		int tmp = 0;
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				tmp = arr[i][j] - average;

				if (tmp < 0)
					time += (-tmp);
				else {
					time += (tmp * 2);
				}

			}
		}
	}
	cout << time << ' ' << average;

}















//18111번 해답

#include<iostream>
using namespace std;

int main(){
	int n, m, b;
	int map[500][500]; // 주어진 조건 1 사용
	int leastTime = 0x7f7f7f7f;
	int mostHeight;
	cin >> n >> m >> b;
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++) {
			cin >> map[i][j];
		}
	}


	for (int h = 0; h <= 256; h++) { // 안쓴 조건2 => 블록 높이
		int build = 0;
		int remove = 0;
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {

				int height = map[i][j] - h;

				if (height > 0)
					remove += height;
				else if (height < 0)
					build -= height;
			}
		}
		if (remove + b > build) {
			int time = remove * 2 + build;
			if (leastTime >= time) {
				leastTime = time;
				mostHeight = h;
			}
		}


	}
	cout << leastTime << ' ' << mostHeight << '\n';


}
