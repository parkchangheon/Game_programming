#include <iostream> // 표준 입출력을 위한 클래스와 객체, 변수등이 선언


/*
int main() {
	std::cout << " hello world" << std::endl;
	std::cout << 10 << std::endl;
	std::cout << 10.5F << std::endl;
	std::cout << "n+5=" << "\n";
	return 0;
}
*/



/*
double area(int r);

int main() {
	int n = 3;
	char c = '#';
	std::cout << c << 5.5 << '-' << n << "hello" << true << std::endl;
	std::cout << "n+5=" << "\n";
	std::cout << " 면적은 " << area(n); // 함수 area()의 리턴값 출력
}


double area(int r) {
	return 3.14 * r * r;
}
*/





/*
#include<iostream>
using namespace std;

int main() {
	cout << "너비를 입력하세요>>";
	int height;
	int width;
	cin >> width; // 키보드로부터 너비를 읽어 width 변수에 저장
	cout << " 높이를 저장하세요 >>";
	cin >> height;

	int area = height * width;
}



#include<iostream>
using namespace std;

int main() {
	cout << "너비& 높이를 입력하세요>>";
	int height;
	int width;
	cin >> width >> height; // 키보드로부터 너비를 읽어 width 변수에 저장
	int area = height * width;
	cout << area;
}




#include<iostream>
#include<cstring>
using namespace std;

int main() {
	char name5[10] = "Greece";
	//5번 인덱스까지 채워지고 나머지는 \0로 초기화

	char name[6];
	cout << "입력해라 ";
	cin >> name;
	cout << "name은 = " << name<< "name5는 "<< name5<<endl;
}




// 띄워 쓰기 문자열 입력받기
#include<iostream>
#include<cstring>
using namespace std;

int main() {
	char addr[100];
	cin.getline(addr, 100, '\n');
	cout << addr;
}




#include<iostream>
#include<string>
using namespace std;

int main() {
	string song("Falling in love with you");
	string elvis("Elvis Presley");
	string singer;
	
	cout << song + "를 부른 가수는?";
	cout << "(힌트 첫글자 : " << elvis[0]<<")";

	getline(cin, singer);
	if (singer == elvis)
		cout << "맞았다";
	else
		cout << "틀렸다";

}



//new 와 delete 
//new 는 생성(동적 할당), delete는 소멸(해제) 연산자

#include<iostream>
using namespace std;

int main() {
	int *pData = new int;   // 인스턴스만 동적으로 생성하는 경우
	int* pNewData = new int(10); // 초기값을 기술한 경우

	*pData = 5;
	cout << *pData << endl;
	cout << *pNewData << endl;

	delete pData;
	delete pNewData;

}



//동적으로 배열형태의 객체를 생성

#include<iostream>
using namespace std;
int main() {

	int *arr = new int[5];

	for (int i = 0; i < 5; i++)
		arr[i] = (i + 1) * 10;
	for (int i = 0; i < 5; ++i)
		cout << arr[i] << endl;

	delete[] arr;
	return 0;
}



//참조?
#include<iostream>
using namespace std;
int main() {

	int nData = 10;
	int& ref = nData; //ref의 값은 nData이다 + 연결? 

	ref = 20; //그러므로 ref의 값이 변경되면 nData역시 변경됨
	cout << nData << endl;

	int* pnData = &nData;  // pnData의 값은 nData의 값을 가지낟.
	*pnData = 30; //"
	cout << nData << endl;
	return 0;

}



//참조2
#include<iostream>
using namespace std;

void testfunc(int& rParam) {
	rParam = 100;
}

int main() {
	int nData = 0;
	testfunc(nData);
	cout << nData << endl;
	return 0;

}



#include<iostream>

using namespace std;

void swap(int& a, int& b) {
	int nTmp = a;
	a = b;
	b = nTmp;
}

int main() {
	int x = 10;
	int y = 20;

	swap(x, y);
	cout << x <<" " << y;
	return 0;
	
}







#include<iostream>

using namespace std;

int main() {

	int val1 = 100;
	int& val2 = val1;
	//int& val3 = 200;
	int& val4 = val2;
	//int& val5;

	val1 = val1 * 3;
}





#include<iostream>
#include "extern.h"

using namespace std;

int main() {
	cout << buffersize << "," << domain << endl;
	return 0;
}




#include<iostream>

using namespace std;

int main() {

	int aList[5] = { 10,20,30,40,50 };

	for (auto n : aList) //각 요소의 값을 n에 복사
		cout << n << ' ';

	cout << endl;

	for (auto& n : aList) // n 은 각 요소에 대한 참조 
		cout << n << ' ';

	cout << endl;
	return 0;
}






#include<stdio.h>
using namespace std;

int sum(int a, int b);

int main() {
	int n = 0;
	cout << "끝수를 입력하세요 ";
	cin >> n;

	cout << "1부터 " << n << "까지의 값은 : " << sum(1, n);
	return 0;

}

int sum(int a, int b) {
	int hap = 0;
	for (int i = a; i <= b; i++)
		hap += i;
	return hap;

}

*/

