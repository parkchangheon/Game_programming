Delegate 기능은, 어떠한 기능을 끝내고 다음 기능을 틀어줘 할때 사용됨.
델리게이트 기능을 쓰는 예시, 

공격 기능 구현할때 
->

.h
UPROPERTY(VisibleAnywhere)
bool IsAttacking = false; 



.cpp 
void AMyCharacter::Attack()
{
  if(IsAttacking)
    return;

  auto AnimInstance = Cast<UMyAnimInstance>(GetMesh()->GetAnimInstance());
  if(AnimInstance)
  {
    AnimInstance->PlayAttackMontage();
  }

  IsAttacking = true;
}



이걸 true 처리해주고 다시 false 처리해주는 곳이 있어야함.
물론 이것을 Montage_isPlaying을 체크해서 매 틱마다 false 호출시 꺼주면 되는데, 

어떤 행동이 끝났을때 ~~를 호출해달라고 조건을 붙이는게 Delegate이다.






.h
UPROPERTY()
class UMyAnimInstance* AnimInstance;


.cpp
AnimInstance = Cast<UMyAnimInstance>(GetMesh()->GetAnimInstance());
AnimInstance->OnMontageEnded.AddDynamic(this, &AMyCharacter::OnAttackMontageEnded);



========================
애니메이션 노티파이 
연타 모션 -> 평타 모션 3가지로 바꿔줌.

이것은 몽타주 섹션에 링크를 제거해서 끊어주면 별도의 동작으로 나눌 수 있다.








